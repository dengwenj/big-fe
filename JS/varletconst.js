/**
 * var 关键字
 * 1、没有块级作用域的概念
 * 2、有全局作用域、函数作用域的概念
 * 3、不初始化值默认为 undefined
 * 4、存在变量提升
 * 5、全局作用域用 var 声明的变量会挂载到 window 对象下
 * 6、同一作用域中允许重复声明
 * 
 * let 关键字
 * 1、有块级作用域的概念
 * 2、不存在变量提升
 * 3、暂时性死区
 * 4、不存在全局作用域的概念
 * 5、同一块作用域中不允许重复声明
 * 
 * const 关键字
 * 与 let 特性一样，仅有2个差别：
 * 1、必须立即初始化，不能留到后面赋值
 * 2、常量的值不能改变(内存地址)
 * 
 * ES6 中新增了块级作用域。块级作用域由 {} 包括，if 语句和 for 语句里面的 {} 也属于块作用域
 * 在以前没有块作用域的时候，在 if 或者 for 循环中声明的变量会泄露成全局变量，其次就是 {} 中的内层变量可能会覆盖外层变量。块级作用域的出现解决了这些问题
 */
if (true) {
  var a = 1
}
console.log(a)

for (var i = 0; i < 5; i++) {
  console.log(i)
}
console.log("外层访问的 i = " + i) // 4