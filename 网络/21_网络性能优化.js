/**
 * 1、优化打包体积
 * 利用一些工具压缩、混淆最终打包代码，减少包体积
 * 2、多目标打包
 * 利用一些打包插件，针对不同的浏览器打包出不同的兼容性版本，这样一来，每个版本中的兼容性代码就会大大减少，从而减少包体积
 * 3、压缩
 * 现代浏览器普遍支持压缩格式，因此服务端的各种文件可以压缩再响应给客户端，只要解压时间小于优化的传输时间，压缩就是可行的
 * 4、CDN
 * 利用 CDN 可以大幅缩减静态资源的访问时间，特别是对于公共库的访问，可以使用知名的 CDN 资源，这样可以实现跨越站点的缓存
 * 5、缓存
 * 对于除 HTML 外的所有静态资源均可以开启协商缓存，利用构建工具打包产生的文件 hash 值来置换缓存
 */